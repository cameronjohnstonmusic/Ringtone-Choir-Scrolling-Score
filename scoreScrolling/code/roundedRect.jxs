<jittershader name="fill-flat-triangles">
	<description>
		An auto-generated shader for simulating deprecated OpenGL features in OpenGL 3.2+
	</description>
	<param name="position" type="vec3" state="POSITION" />
	<param name="modelViewProjectionMatrix" type="mat4" state="MODELVIEW_PROJECTION_MATRIX" />
	<param name="color" type="vec4" state="COLOR0" />
	<language name="glsl" version="1.5">
		<bind param="position" program="vp" />
		<bind param="modelViewProjectionMatrix" program="vp" />
		<bind param="color" program="vp" />
		<program name="vp" type="vertex">
			<![CDATA[
			// Preprocessor
			#version 330 core
			
			// Definitions
			
			
			// Uniforms
			
			
			
			uniform mat4 modelViewProjectionMatrix;
			
			out float posX;
			
			
			out float posY;
			
			
			
			
			// Attributes
			in vec3 position;
			uniform vec4 color;
			
			
			
			
			// Output
			out jit_PerVertex {
				flat vec4 color;
				
				
			} jit_out;
			
			
			// Library functions
			
			
			
				
			void main() {
				
				gl_Position = modelViewProjectionMatrix * vec4(position, 1.);	
				
				posY = position.y;
				
				posX = position.x;
				
				
				jit_out.color = color;
				
				
				
				
				
			}
			
			
			
		]]>
		</program>
		<program name="fp" type="fragment">
			<![CDATA[
			#version 330 core
			
			in float posY;
			
			in float posX;
			
			//uniform r;
			
			in jit_PerVertex {
				flat vec4 color;
				
				
				
				
			} jit_in;
			out vec4 color;
			
			//pow((abs(posX), 2/r)) + pow((abs(posY), 2/r)) > 1
			
			void main() {
				
				//r = .1;
				
				if (pow(posX, 2/0.2) + pow(posY, 2/0.2) < 1.) {
			
				color = jit_in.color;
				
				}
			
				if (pow(posX, 2/0.2) + pow(posY, 2/0.2) > 1.) {
					
					color = vec4(0, 0, 0, 0);
					} 
			
			
			
			}	
			
			
		]]>
		</program>
	</language>
</jittershader>
